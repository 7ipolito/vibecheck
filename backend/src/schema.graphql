# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Post {
  _id: String!
  name: String!
  description: String
  image: String
  active: Boolean!
  instagram: String
  createdAt: DateTime!
  tickets: [String!]
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type User {
  _id: ID!
  username: String!
  walletAddress: String!
  image: String!
  createdAt: DateTime!
}

type ErrorTypeDelete {
  path: String!
  message: String!
}

type DeleteResponse {
  error: [ErrorTypeDelete!]
}

type ErrorType {
  path: String!
  message: String!
}

type RegisterResponse {
  error: [ErrorType!]
  success: Boolean
}

type Ticket {
  id: ID!
  event: Post!
  type: String!
  price: Float!
  bucketUrl: String
  status: String!
  createdAt: String!
  updatedAt: String!
}

type Payment {
  id: ID!
  ticket: Ticket!
  method: String
  amount: Float!
  status: String!
  transactionId: String
  pixCopiaECola: String
  pixQrCodeUrl: String
  worldcoinVerificationId: String
  worldcoinNullifier: String
  createdAt: String!
  updatedAt: String!
}

type Query {
  whoami(whoamiInput: WhoamiInput!): User!
  posts: [Post!]!
  tickets(findTicketInput: FindTicketDTo!): [Ticket!]!
  ticket(id: String!): Ticket!
  payments: [Payment!]!
  payment(id: String!): Payment!
}

input WhoamiInput {
  walletAdddress: String!
}

input FindTicketDTo {
  eventId: String!
}

type Mutation {
  deleteUser(deleteInput: DeleteInput!): DeleteResponse!
  createPost(createPostInput: CreateSimplePostDto!): Post!
  createTicket(createTicketInput: CreateTicketDto!): Ticket!
  register(registerInput: RegisterInput!): RegisterResponse!
  createPayment(input: CreatePaymentDto!): Payment!
  updatePaymentStatus(id: String!, status: String!): Payment!
}

input DeleteInput {
  id: String!
}

input CreateSimplePostDto {
  name: String!
  image: String!
}

input CreateTicketDto {
  eventId: String!
  type: String!
  price: Float!
  bucketUrl: String
}

input RegisterInput {
  username: String!
  image: String
  walletAddress: String!
}

input CreatePaymentDto {
  ticketId: String!
  method: String!
  amount: Float!
  worldcoinVerificationId: String
  worldcoinNullifier: String
}